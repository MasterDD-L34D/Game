{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://giocoevo.tactics/schema/enneagramma.schema.json",
  "title": "Profilo Enneagramma",
  "type": "object",
  "required": ["type_id"],
  "properties": {
    "type_id": {
      "type": "integer",
      "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9],
      "description": "Tipo di base (1–9)"
    },
    "type_name_it": {
      "type": "string",
      "enum": [
        "Il Perfezionista / Riformatore",
        "Il Donatore / Aiutante",
        "L’Esecutore / Realizzatore",
        "Il Romantico / Individualista",
        "L’Osservatore / Investigatore",
        "Lo Scettico Leale / Lealista",
        "L’Ottimista / Entusiasta",
        "Il Capo / Sfidante",
        "Il Mediatore / Pacificatore"
      ],
      "readOnly": true,
      "description": "Nome italiano del tipo (derivato da type_id)"
    },
    "wing_primary": {
      "type": "string",
      "pattern": "^[1-9]w[1-9]$",
      "description": "Wing primaria (es. 2w3). Deve essere coerente con type_id."
    },
    "wings": {
      "type": "array",
      "minItems": 1,
      "maxItems": 2,
      "items": {
        "type": "string",
        "pattern": "^[1-9]w[1-9]$"
      },
      "description": "Ali possibili (adiacenti) per il tipo"
    },
    "core_emotion": {
      "type": "string",
      "enum": ["Rabbia", "Vergogna", "Paura"],
      "description": "Emozione di base (Centri): Rabbia, Vergogna, Paura. Derivata dal tipo."
    },
    "social_style": {
      "type": "string",
      "enum": ["Obbediente", "Ritirato", "Assertivo"],
      "description": "Triadi Hornevian: Obbediente (1,2,6), Ritirato (4,5,9), Assertivo (3,7,8)."
    },
    "conflict_style": {
      "type": "string",
      "enum": ["Ottimisti", "Competenti", "Reattivi"],
      "description": "Triadi Harmonic: Ottimisti (2,7,9), Competenti (1,3,5), Reattivi (4,6,8)."
    },
    "object_relation": {
      "type": "string",
      "enum": ["Attaccamento", "Frustrazione", "Rifiuto"],
      "description": "Triadi Object Relations: Attaccamento (3,6,9), Frustrazione (1,4,7), Rifiuto (2,5,8)."
    },
    "instinct_variant": {
      "type": "string",
      "enum": ["SP", "SO", "SX"],
      "description": "Variante istintiva: SP / SO / SX."
    },
    "stacking": {
      "type": "string",
      "enum": ["sp/so", "sp/sx", "so/sp", "so/sx", "sx/sp", "sx/so"],
      "description": "Combinazione delle varianti (6 possibili)."
    },
    "notes": {
      "type": "string",
      "description": "Annotazioni libere."
    },
    "basic_fear": {
      "type": "string",
      "readOnly": true
    },
    "basic_desire": {
      "type": "string",
      "readOnly": true
    },
    "passion": {
      "type": "string",
      "readOnly": true
    },
    "fixation": {
      "type": "string",
      "readOnly": true
    },
    "virtue": {
      "type": "string",
      "readOnly": true
    },
    "stress_to": {
      "type": "integer",
      "minimum": 1,
      "maximum": 9,
      "readOnly": true
    },
    "growth_to": {
      "type": "integer",
      "minimum": 1,
      "maximum": 9,
      "readOnly": true
    },
    "wings_names_ei": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "readOnly": true
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 1
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["1w2", "1w9"]
            }
          },
          "wing_primary": {
            "enum": ["1w2", "1w9"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 2
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["2w1", "2w3"]
            }
          },
          "wing_primary": {
            "enum": ["2w1", "2w3"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 3
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["3w2", "3w4"]
            }
          },
          "wing_primary": {
            "enum": ["3w2", "3w4"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 4
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["4w3", "4w5"]
            }
          },
          "wing_primary": {
            "enum": ["4w3", "4w5"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 5
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["5w4", "5w6"]
            }
          },
          "wing_primary": {
            "enum": ["5w4", "5w6"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 6
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["6w5", "6w7"]
            }
          },
          "wing_primary": {
            "enum": ["6w5", "6w7"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 7
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["7w6", "7w8"]
            }
          },
          "wing_primary": {
            "enum": ["7w6", "7w8"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 8
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["8w7", "8w9"]
            }
          },
          "wing_primary": {
            "enum": ["8w7", "8w9"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "type_id": {
            "const": 9
          }
        }
      },
      "then": {
        "properties": {
          "wings": {
            "items": {
              "enum": ["9w1", "9w8"]
            }
          },
          "wing_primary": {
            "enum": ["9w1", "9w8"]
          }
        }
      }
    }
  ]
}
